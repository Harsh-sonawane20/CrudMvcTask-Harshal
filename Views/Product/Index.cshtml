@model CrudMvcTask.Models.ProductListViewModel

@{
    ViewBag.Title = "Product List";
}

<h2>Product List</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>

<!-- Search Input -->
<div class="search-container">
    <input type="text" id="searchInput" class="form-control" placeholder="Search by Product Name, Product ID, or Category Name" onkeyup="filterTable()" />
</div>

<table class="table table-bordered table-striped" id="productTable">
    <thead class="thead-dark">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Products.First().ProductId)</th>
            <th>@Html.DisplayNameFor(model => model.Products.First().ProductName)</th>
            <th>@Html.DisplayNameFor(model => model.Products.First().CategoryId)</th>
            <th>@Html.DisplayNameFor(model => model.Products.First().CategoryName)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Products)
        {
            <tr class="productRow">
                <td>@Html.DisplayFor(modelItem => item.ProductId)</td>
                <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                <td>@Html.DisplayFor(modelItem => item.CategoryId)</td>
                <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                <td>
                    <a href="@Url.Action("Edit", "Product", new { id = item.ProductId })" class="btn btn-warning btn-sm" title="Edit">
                        <i class="bi bi-pencil-square"></i>
                    </a>
                    <a href="@Url.Action("Delete", "Product", new { id = item.ProductId })" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?');" title="Delete">
                        <i class="bi bi-trash"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Links -->
<div class="pagination">
    @if (Model.CurrentPage > 1)
    {
        <a href="@Url.Action("Index", "Product", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })" class="btn btn-secondary btn-sm" title="Previous">
            <i class="bi bi-arrow-left-circle"></i>
        </a>
    }

    @for (var page = 1; page <= Model.TotalPages; page++)
    {
        <a href="@Url.Action("Index", "Product", new { page = page, pageSize = Model.PageSize })" class="btn btn-secondary btn-sm @(page == Model.CurrentPage ? "active" : "")">@page</a>
    }

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a href="@Url.Action("Index", "Product", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })" class="btn btn-secondary btn-sm" title="Next">
            <i class="bi bi-arrow-right-circle"></i>
        </a>
    }
</div>

<script>
    function filterTable() {
        var input = document.getElementById("searchInput");
        var filter = input.value.toLowerCase();
        var table = document.getElementById("productTable");
        var rows = table.getElementsByTagName("tr");

        // Loop through all table rows (excluding the header)
        for (var i = 1; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName("td");
            var productId = cells[0].innerText.toLowerCase();
            var productName = cells[1].innerText.toLowerCase();
            var categoryId = cells[2].innerText.toLowerCase();
            var categoryName = cells[3].innerText.toLowerCase();

            // Check if the input matches the productId, productName, or categoryName
            if (productId.includes(filter) || productName.includes(filter) || categoryId.includes(filter) || categoryName.includes(filter)) {
                rows[i].style.display = "";
            } else {
                rows[i].style.display = "none";
            }
        }
    }
</script>
